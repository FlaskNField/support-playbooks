# Support Triage Process

The Support Triage process is a regular meeting (typically daily) designed to improve alignment between Technical Support Engineers (TSEs) and Engineering teams. The goal is to review escalated issues, confirm classification, ensure accountability, and promote faster resolution through shared visibility and collaboration.

---

## 🧭 Objectives

- Ensure consistent progress on escalated support tickets  
- Confirm classification of each issue as a bug or feature request  
- Drive clear ownership and next steps  
- Improve support-to-engineering knowledge transfer  
- Increase visibility across customer-facing teams  

---

## 👥 Participants

- **Technical Support Engineers (TSEs)** — present escalated ticket context and updates  
- **Engineering Representatives** — share status or required actions  
- **Meeting Owner (Ceremony Master)** — facilitates, timeboxes, and keeps the meeting on track  
- **Optional Attendees** — CSMs, Sales Engineers, Product, or anyone interested in escalated customer issues  

---

## 🧱 Meeting Format

- **Cadence**: Daily or at a consistent time  
- **Duration**: ~15 minutes  
- **Structure**:
  - Review by engineering team (e.g., Java, Frontend, Backend, Security)
  - TSE presents escalated ticket(s)
  - Engineers respond with status, next steps, or blockers
  - Meeting owner keeps pace and moves long conversations to follow-ups

---

## ⚠️ Escalation Criteria

Only escalate a support ticket when:
- It has detailed context, including steps to reproduce  
- Logs and environmental info are provided  
- It clearly impacts the customer and meets severity thresholds  

---

## 🔄 Post-Triage Ticket Flows

### 🐞 Bug Confirmed
- Prioritized by severity:
  - **Critical** — interrupts current sprint  
  - **Major** — included in next sprint  
  - **Minor / Tech Debt** — added to engineering backlog  

Support ticket is reopened or marked for follow-up once resolved.

### 💡 Feature Request
- Routed to Product and CS for prioritization  
- May be added to roadmap or feedback backlog  

---

## 🧰 Tooling & Workflow Integration

### Required Fields on Escalated Ticket:
- Customer Name / ID  
- Link to original support ticket  
- Severity  
- Escalation Reason  
- Support + Engineering Owners  
- Date escalated  
- Status (Open, In Progress, Blocked, Resolved)  

### Closure Codes / Resolution Statuses:
- `Closed - Code Fix`  
- `Closed - Docs Updated`  
- `Closed - Knowledge Transfer`  
- `Closed - Product Feedback`  

These codes should be tracked in your support platform for reporting.

### Sync Behavior:
When the engineering ticket is closed:
- Reopen or update the support ticket to `Open` or `Pending Support Follow-up`  
- TSE reviews outcome and follows up with customer  

---

## 📊 Metrics to Track

- # of tickets escalated to engineering  
- Average time to resolution  
- Distribution by closure code  
- Ratio of bugs vs. feature requests  
- Responsiveness by engineering team  
- Docs or KB articles created as a result  

---

## ✅ Best Practices

- Keep the meeting tight; async follow-up for deep dives  
- Always include customer impact  
- Promote documenting known issues  
- Hold support accountable for escalation readiness  
- Encourage transparency across teams  

---

## 📝 Sample Agenda

1. Quick intro or recap (1 min)  
2. Team-by-team ticket review  
3. Assign actions / identify blockers  
4. Summarize top-priority items  
5. End on time  
